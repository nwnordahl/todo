[{"/home/nicolai/react-todo/src/index.js":"1","/home/nicolai/react-todo/src/reportWebVitals.js":"2","/home/nicolai/react-todo/src/App.js":"3","/home/nicolai/react-todo/src/components/Form.js":"4","/home/nicolai/react-todo/src/components/TodoList.js":"5","/home/nicolai/react-todo/src/components/Todo.js":"6"},{"size":500,"mtime":1611652358298,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611652358298,"results":"9","hashOfConfig":"8"},{"size":1700,"mtime":1611688533126,"results":"10","hashOfConfig":"8"},{"size":1071,"mtime":1611664311244,"results":"11","hashOfConfig":"8"},{"size":417,"mtime":1611665487902,"results":"12","hashOfConfig":"8"},{"size":799,"mtime":1611661219449,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"4zl9lf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/nicolai/react-todo/src/index.js",[],["29","30"],"/home/nicolai/react-todo/src/reportWebVitals.js",[],"/home/nicolai/react-todo/src/App.js",["31"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\n// Import components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  // States\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Run once when the app starts for the first time\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  // USE EFFECT\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  // Save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Nicolai's Todo List</h1>\n      </header>\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/nicolai/react-todo/src/components/Form.js",[],"/home/nicolai/react-todo/src/components/TodoList.js",[],"/home/nicolai/react-todo/src/components/Todo.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":23,"column":6,"nodeType":"40","endLine":23,"endColumn":21,"suggestions":"41"},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["46"],["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"49","text":"50"},[593,608],"[todos, status, filterHandler, saveLocalTodos]"]